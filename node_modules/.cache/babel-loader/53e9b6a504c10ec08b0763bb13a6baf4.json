{"ast":null,"code":"// 1ra pagina de Datos\n// 8vo elemento creado\nimport React from \"react\"; // (1)\n\nconst CursosContexto = React.createContext({\n  // Toma desde \"interface Contexto\"\n  cursos: [],\n  añadirCurso: () => {},\n  añadirObjetivo: () => {},\n  borrarObjetivo: () => {},\n  actualizarObjetivo: () => {}\n}); // (2)\n\n; // (3)\n\n// Toma desde \"interface Objetivo\"\n; // (4)\n\n;\nexport default CursosContexto; // createContext = maneja los datos que le brindemos desde distintos lugares de la app\n//                 En este caso el contecto es un objeto {} con un vector de \"cursos\"\n// cursos: {}[] = indica que el contexto maneja un objeto donde el campo de \"cursos\"\n//                va a ser un vector de objetos.\n//                Aqui estoy moviendo el {} a la interface de \"Curso\"\n// Objetivo: {}[] = Idem para cursos\n// interface = para la descripcion de tipos de variables.","map":{"version":3,"sources":["C:/Users/Quadion/Desktop/Milanesas/APPS/SECOND IONIC-REACT APP/myApp/src/Datos/CursosContexto.tsx"],"names":["React","CursosContexto","createContext","cursos","añadirCurso","añadirObjetivo","borrarObjetivo","actualizarObjetivo"],"mappings":"AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,cAAc,GAAGD,KAAK,CAACE,aAAN,CAAgC;AAAI;AACzDC,EAAAA,MAAM,EAAE,EAD6C;AAErDC,EAAAA,WAAW,EAAE,MAAM,CAAE,CAFgC;AAGrDC,EAAAA,cAAc,EAAE,MAAM,CAAE,CAH6B;AAIrDC,EAAAA,cAAc,EAAE,MAAM,CAAE,CAJ6B;AAKrDC,EAAAA,kBAAkB,EAAE,MAAM,CAAE;AALyB,CAAhC,CAAvB,C,CAQA;;AAOC,C,CAED;;AAI2B;AAC1B,C,CAED;;AAIC;AAED,eAAeN,cAAf,C,CAIA;AACA;AAEA;AACA;AACA;AAEA;AAEA","sourcesContent":["// 1ra pagina de Datos\r\n// 8vo elemento creado\r\n\r\nimport React from \"react\";\r\n\r\n// (1)\r\nconst CursosContexto = React.createContext <Contexto> ({   // Toma desde \"interface Contexto\"\r\n  cursos: [],\r\n  añadirCurso: () => {},\r\n  añadirObjetivo: () => {},\r\n  borrarObjetivo: () => {},\r\n  actualizarObjetivo: () => {},\r\n});\r\n\r\n// (2)\r\ninterface Contexto {\r\n  cursos: Curso[]          // Toma desde \"interface Curso\"\r\n  añadirCurso: (tituloCurso: string) => void\r\n  añadirObjetivo: (cursoId: string, textoObjetivo: string) => void\r\n  borrarObjetivo: () => void\r\n  actualizarObjetivo: () => void\r\n};\r\n\r\n// (3)\r\n export interface Curso {\r\n  id: string;\r\n  titulo: string;\r\n  objetivos: Objetivo[];   // Toma desde \"interface Objetivo\"\r\n};\r\n\r\n// (4)\r\nexport interface Objetivo {\r\n  id: string;\r\n  texto: string;\r\n};\r\n\r\nexport default CursosContexto;\r\n\r\n\r\n\r\n// createContext = maneja los datos que le brindemos desde distintos lugares de la app\r\n//                 En este caso el contecto es un objeto {} con un vector de \"cursos\"\r\n\r\n// cursos: {}[] = indica que el contexto maneja un objeto donde el campo de \"cursos\"\r\n//                va a ser un vector de objetos.\r\n//                Aqui estoy moviendo el {} a la interface de \"Curso\"\r\n\r\n// Objetivo: {}[] = Idem para cursos\r\n\r\n// interface = para la descripcion de tipos de variables."]},"metadata":{},"sourceType":"module"}