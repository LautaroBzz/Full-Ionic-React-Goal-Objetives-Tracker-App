{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quadion\\\\Desktop\\\\Milanesas\\\\IONIC\\\\SECOND IONIC-REACT APP\\\\myApp\\\\src\\\\Componentes\\\\EdicionModal.tsx\";\n// 1er componente creado.\n// 6to elemento general creado.\n// Sacamos el elemento \"IonModal\" de \"Objetivos.tsx\"\nimport React, { useRef, useState } from \"react\";\nimport { IonModal // Para habilitar un pop up luego de que se cumpla una accion\n, IonHeader, IonToolbar, IonTitle, IonContent, IonButton, IonGrid, IonRow, IonCol, IonLabel, IonItem, IonInput, IonText } from '@ionic/react';\n\nconst EdicionModal = props => {\n  var _props$objetivoEditad;\n\n  const textoRef = useRef(null);\n  const [error, setError] = useState(\"\");\n\n  const guardar = () => {\n    const textoIngresado = textoRef.current.value;\n\n    if (!textoIngresado || textoIngresado.toString().trim().length === 0) {\n      setError(\"Por favor ingresar texto valido!\");\n      return;\n    }\n\n    ;\n    props.guardar(textoIngresado.toString());\n  };\n\n  return /*#__PURE__*/React.createElement(IonModal, {\n    isOpen: props.mostrar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, props.objetivoEditado ? \"EDITAR\" : \"AÑADIR\", \" Objetivo\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    position: \"floating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Ingresa objetivo:\"), /*#__PURE__*/React.createElement(IonInput, {\n    type: \"text\",\n    value: (_props$objetivoEditad = props.objetivoEditado) === null || _props$objetivoEditad === void 0 ? void 0 : _props$objetivoEditad.text,\n    ref: textoRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })))), error && /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(IonText, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, error)))), \";\", /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    fill: \"clear\",\n    onClick: props.cancelar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \" Cancelar \")), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"secondary\",\n    expand: \"block\",\n    onClick: guardar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \" Guardar \"))))));\n};\n\nexport default EdicionModal; // usamos props para pasarle las funciones \"editando\" y \"cancelarEdicion\" desde \"Objetivos.tsx\"\n// originalmente era:\n// IonModal isOpen={editando}>\n// <IonButton onClick={cancelarEdicion}>Cancelar</IonButton>\n// objetivoEditado = acepto un objeto con la esctructura aclarada o null \n//                   Si null > ingresamos nuevo objetivo\n//                   Si !null > editamos objetivo ya existente\n// \"EDITAR\" : \"AÑADIR\" = muestro dinamicamente el titulo segun se quiera crear o editar un objetivo\n// textoRef = la uso para tomar los inputs del usuario y poder crear el curso","map":{"version":3,"sources":["C:/Users/Quadion/Desktop/Milanesas/IONIC/SECOND IONIC-REACT APP/myApp/src/Componentes/EdicionModal.tsx"],"names":["React","useRef","useState","IonModal","IonHeader","IonToolbar","IonTitle","IonContent","IonButton","IonGrid","IonRow","IonCol","IonLabel","IonItem","IonInput","IonText","EdicionModal","props","textoRef","error","setError","guardar","textoIngresado","current","value","toString","trim","length","mostrar","objetivoEditado","text","cancelar"],"mappings":"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","sourcesContent":["// 1er componente creado.\r\n// 6to elemento general creado.\r\n// Sacamos el elemento \"IonModal\" de \"Objetivos.tsx\"\r\n\r\nimport React, { useRef, useState } from \"react\";\r\n\r\nimport {\r\n  IonModal, // Para habilitar un pop up luego de que se cumpla una accion\r\n  IonHeader,\r\n  IonToolbar,\r\n  IonTitle,\r\n  IonContent,\r\n  IonButton,\r\n  IonGrid,\r\n  IonRow,\r\n  IonCol,\r\n  IonLabel,\r\n  IonItem,\r\n  IonInput,\r\n  IonText,\r\n} from '@ionic/react'\r\n\r\n\r\nconst EdicionModal: React.FC <{\r\n  mostrar: boolean; \r\n  cancelar: () => void;\r\n  guardar: (textoObjetivo: string) => void;\r\n  objetivoEditado: {id: string; text: string} | null;\r\n\r\n}> = props => {\r\n\r\n  const textoRef = useRef<HTMLIonInputElement>(null);\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const guardar = () => {\r\n    const textoIngresado = textoRef.current!.value;\r\n    if(!textoIngresado || textoIngresado.toString().trim().length===0) {\r\n      setError(\"Por favor ingresar texto valido!\")\r\n      return;\r\n    };\r\n    props.guardar(textoIngresado.toString());\r\n  };\r\n\r\n\r\n  return (\r\n    <IonModal isOpen={props.mostrar}>\r\n\r\n      <IonHeader>\r\n        <IonToolbar color=\"primary\">\r\n          <IonTitle>{props.objetivoEditado ? \"EDITAR\" : \"AÑADIR\"} Objetivo</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent>\r\n        <IonGrid>\r\n\r\n          <IonRow>\r\n            <IonCol>\r\n              <IonItem>\r\n                <IonLabel position=\"floating\">Ingresa objetivo:</IonLabel>\r\n                <IonInput \r\n                  type=\"text\" \r\n                  value={props.objetivoEditado?.text} \r\n                  ref={textoRef}\r\n                />\r\n              </IonItem>\r\n            </IonCol>\r\n          </IonRow>\r\n\r\n          {\r\n            error && (\r\n              <IonRow>\r\n                 <IonCol>\r\n                  <IonText color=\"danger\">\r\n                    <p>{error}</p>\r\n                  </IonText>\r\n                </IonCol>\r\n              </IonRow>\r\n            )\r\n          };\r\n\r\n          <IonRow className=\"ion-text-center\">\r\n            <IonCol>\r\n              <IonButton fill=\"clear\" onClick={props.cancelar}> Cancelar </IonButton>\r\n            </IonCol>\r\n            <IonCol>\r\n              <IonButton color=\"secondary\" expand=\"block\" onClick={guardar}> Guardar </IonButton>\r\n            </IonCol>\r\n          </IonRow>\r\n\r\n        </IonGrid>\r\n      </IonContent>\r\n\r\n    </IonModal>\r\n  )\r\n};\r\n\r\nexport default EdicionModal\r\n\r\n\r\n// usamos props para pasarle las funciones \"editando\" y \"cancelarEdicion\" desde \"Objetivos.tsx\"\r\n// originalmente era:\r\n// IonModal isOpen={editando}>\r\n// <IonButton onClick={cancelarEdicion}>Cancelar</IonButton>\r\n\r\n// objetivoEditado = acepto un objeto con la esctructura aclarada o null \r\n//                   Si null > ingresamos nuevo objetivo\r\n//                   Si !null > editamos objetivo ya existente\r\n\r\n// \"EDITAR\" : \"AÑADIR\" = muestro dinamicamente el titulo segun se quiera crear o editar un objetivo\r\n\r\n// textoRef = la uso para tomar los inputs del usuario y poder crear el curso"]},"metadata":{},"sourceType":"module"}