{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quadion\\\\Desktop\\\\Milanesas\\\\APPS\\\\SECOND IONIC-REACT APP\\\\myApp\\\\src\\\\Paginas\\\\Objetivos.tsx\";\n// 2da pagina creada:\n// Misma estructura que \"Cursos.tsx\"\nimport React, { useState } from 'react';\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonButtons, IonBackButton, IonList, IonItem, IonLabel, IonItemSliding // permite que todos los elementos dentro puedan deslizarce hacia los lados\n, IonItemOptions, IonItemOption, IonIcon, IonButton, IonFab, IonFabButton // para botones flotantes\n, isPlatform // habilita a que ciertos componentes solo figuren si se usa un dispositivo especifico\n, IonAlert } from '@ionic/react';\nimport { useParams } from \"react-router-dom\"; // Permite extraer parametros obtenidos en esta pagina. \n// Importo array de cursos:\n\nimport { DETALLE_CURSOS } from \"./Cursos\"; // Importo iconos:\n\nimport { addOutline, create, trash } from 'ionicons/icons';\n\nconst Objetivos = () => {\n  const [incioBorrar, setInicioBorrar] = useState(false);\n  const idCursoSeleccionado = useParams().idcurso;\n  const cursoSeleccionado = DETALLE_CURSOS.find(curso => curso.id === idCursoSeleccionado);\n\n  const inicioBorrarItemObjetivo = () => {\n    setInicioBorrar(true);\n  };\n\n  const inicioEdicionItemObjetivo = evento => {\n    evento.stopPropagation();\n  };\n\n  const añadirObjetivo = () => {};\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: incioBorrar,\n    header: \"Estas seguro de borrar?\",\n    message: \"Esta accion es irreversible\",\n    buttons: [{\n      text: \"No\",\n      role: \"cancel\",\n      handler: () => {\n        setInicioBorrar(false);\n      }\n    }, {\n      text: \"yes\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonBackButton, {\n    defaultHref: \"/cursos/lista\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, cursoSeleccionado ? cursoSeleccionado.titulo : \"No existe el curso\"), !isPlatform(\"android\") && /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    onClick: añadirObjetivo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"icon-only\",\n    icon: addOutline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, cursoSeleccionado && /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, cursoSeleccionado.objetivos.map(objetivo => /*#__PURE__*/React.createElement(IonItemSliding, {\n    key: objetivo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonItemOptions, {\n    side: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonItemOption, {\n    onClick: inicioBorrarItemObjetivo,\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"icon-only\",\n    icon: trash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(IonItem, {\n    lines: \"full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, objetivo.texto)), /*#__PURE__*/React.createElement(IonItemOptions, {\n    side: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonItemOption, {\n    onClick: inicioEdicionItemObjetivo,\n    color: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"icon-only\",\n    icon: create,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  })))))), isPlatform(\"android\") && /*#__PURE__*/React.createElement(IonFab, {\n    horizontal: \"end\",\n    vertical: \"bottom\",\n    slot: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonFabButton, {\n    color: \"secondary\",\n    onClick: añadirObjetivo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: addOutline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default Objetivos; // IonPage = necesario para componentes lugadoa a traves de routing deben estar dentro\n// slot = indicar donde posicionar el \"back button\" dentro del toolbar \n//        (start= izquierda, end = derecha, icon-only = adapta el tamaño del icono, fixed = fijo)\n// defaultHref = indica un url por default en caso de que ionic no sepa desde donde se viene\n// useParams = permite extraer parametros obtenido en esta pagina. \n//             Implementado para \"idcurso\" en \"Cursos.tsx\"\n// idCursoSeleccionado = traigo desde \"App.tsx\" el parametro \"idcurso\" y le indicamos \n//                       que siempre sera de tipo \"string\"\n// cursoSeleccionado = tomamos el id del curso seleccionado y lo igualamos al {} correspondiente\n//                     dentro de DETALLE_CURSOS\n// {cursoSeleccionado ? cu...} = mostramos dinamicamente el titulo del curso seleccionado.\n// lines = indica como deben figurar las lineas debajo de cada \"objetivo\" de DETALLE_CURSOS \n// button = simplemente para que el elemento se pueda clickear\n// editarItemObjetivo = esto genera que si se hace click SOLO en el icono del boton\n//                      se ejecute la funcion \"editarItemObjetivo\", es decir, \n//                      impide que esta accion se propague hacia afuera y afecte a \n//                      \"borrarItemObjetivo\"\n// borrarItemObjetivo = se efectua cuando se hace click en cualquier lugar dentro del recuadro\n//                      que contiene al \"IonItem\", a excepcion del icono.\n// side = todo el set de \"IonItemOptions\" se debe mostrar en la izquierda del item (start)","map":{"version":3,"sources":["C:/Users/Quadion/Desktop/Milanesas/APPS/SECOND IONIC-REACT APP/myApp/src/Paginas/Objetivos.tsx"],"names":["React","useState","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonButtons","IonBackButton","IonList","IonItem","IonLabel","IonItemSliding","IonItemOptions","IonItemOption","IonIcon","IonButton","IonFab","IonFabButton","isPlatform","IonAlert","useParams","DETALLE_CURSOS","addOutline","create","trash","Objetivos","incioBorrar","setInicioBorrar","idCursoSeleccionado","idcurso","cursoSeleccionado","find","curso","id","inicioBorrarItemObjetivo","inicioEdicionItemObjetivo","evento","stopPropagation","añadirObjetivo","text","role","handler","titulo","objetivos","map","objetivo","texto"],"mappings":"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","sourcesContent":["// 2da pagina creada:\r\n// Misma estructura que \"Cursos.tsx\"\r\nimport React, { useState } from 'react'\r\n\r\nimport {\r\n  IonContent,\r\n  IonHeader,\r\n  IonPage,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonBackButton,\r\n  IonList,\r\n  IonItem,\r\n  IonLabel,\r\n  IonItemSliding, // permite que todos los elementos dentro puedan deslizarce hacia los lados\r\n  IonItemOptions,\r\n  IonItemOption,\r\n  IonIcon,\r\n  IonButton,\r\n  IonFab,\r\n  IonFabButton,  // para botones flotantes\r\n  isPlatform,    // habilita a que ciertos componentes solo figuren si se usa un dispositivo especifico\r\n  IonAlert, \r\n} from '@ionic/react'\r\n\r\nimport { useParams } from \"react-router-dom\" // Permite extraer parametros obtenidos en esta pagina. \r\n\r\n// Importo array de cursos:\r\nimport { DETALLE_CURSOS } from \"./Cursos\"\r\n\r\n// Importo iconos:\r\nimport { addOutline, create, trash } from 'ionicons/icons'\r\n\r\n\r\nconst Objetivos: React.FC = () => {\r\n  const [incioBorrar, setInicioBorrar] = useState(false)\r\n\r\n  const idCursoSeleccionado = useParams<{ idcurso: string }>().idcurso\r\n  const cursoSeleccionado = DETALLE_CURSOS.find(curso => curso.id === idCursoSeleccionado)\r\n\r\n  const inicioBorrarItemObjetivo = () => {\r\n    setInicioBorrar(true)\r\n  }\r\n\r\n  const inicioEdicionItemObjetivo = (evento: React.MouseEvent) => {\r\n    evento.stopPropagation()\r\n  }\r\n\r\n  const añadirObjetivo = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IonAlert \r\n        isOpen={incioBorrar} \r\n        header=\"Estas seguro de borrar?\"\r\n        message=\"Esta accion es irreversible\"\r\n        buttons = {[\r\n          {text:\"No\", role:\"cancel\", handler: ()=>{setInicioBorrar(false)}},\r\n          {text:\"yes\"}\r\n        ]}\r\n        \r\n      />\r\n\r\n      <IonPage>\r\n\r\n        <IonHeader> \r\n          <IonToolbar color=\"primary\">\r\n            <IonButtons slot='start'>\r\n              <IonBackButton defaultHref=\"/cursos/lista\"/>\r\n            </IonButtons>\r\n\r\n            <IonTitle>\r\n              {cursoSeleccionado ? cursoSeleccionado.titulo : \"No existe el curso\"}\r\n            </IonTitle>\r\n\r\n            {!isPlatform(\"android\") &&\r\n              <IonButtons slot=\"end\">\r\n                <IonButton onClick={añadirObjetivo}>\r\n                  <IonIcon slot =\"icon-only\" icon={addOutline}/>\r\n                </IonButton>\r\n              </IonButtons>\r\n            }\r\n          </IonToolbar>\r\n        </IonHeader>\r\n\r\n        <IonContent>\r\n          {cursoSeleccionado && (\r\n            <IonList>\r\n              {cursoSeleccionado.objetivos.map(objetivo => (\r\n                <IonItemSliding key={objetivo.id}>\r\n                  <IonItemOptions side=\"start\">\r\n                    <IonItemOption onClick={inicioBorrarItemObjetivo} color=\"danger\">\r\n                      <IonIcon slot =\"icon-only\" icon={trash}/>\r\n                    </IonItemOption>\r\n                  </IonItemOptions>\r\n\r\n                  <IonItem lines=\"full\"> \r\n                    <IonLabel>\r\n                      {objetivo.texto}\r\n                    </IonLabel> \r\n                  </IonItem>\r\n\r\n                  <IonItemOptions side=\"end\">\r\n                    <IonItemOption onClick={inicioEdicionItemObjetivo} color=\"\">\r\n                      <IonIcon slot=\"icon-only\" icon={create}/>\r\n                    </IonItemOption>\r\n                  </IonItemOptions>\r\n                </IonItemSliding>\r\n                ))} \r\n              </IonList>\r\n            )}\r\n\r\n          {isPlatform(\"android\") && \r\n            <IonFab horizontal=\"end\" vertical=\"bottom\" slot=\"fixed\">\r\n              <IonFabButton color=\"secondary\" onClick={añadirObjetivo}>\r\n                <IonIcon icon={addOutline}/>\r\n              </IonFabButton>\r\n            </IonFab>\r\n          }\r\n        </IonContent>   \r\n\r\n      </IonPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Objetivos\r\n\r\n// IonPage = necesario para componentes lugadoa a traves de routing deben estar dentro\r\n\r\n// slot = indicar donde posicionar el \"back button\" dentro del toolbar \r\n//        (start= izquierda, end = derecha, icon-only = adapta el tamaño del icono, fixed = fijo)\r\n\r\n// defaultHref = indica un url por default en caso de que ionic no sepa desde donde se viene\r\n\r\n// useParams = permite extraer parametros obtenido en esta pagina. \r\n//             Implementado para \"idcurso\" en \"Cursos.tsx\"\r\n\r\n// idCursoSeleccionado = traigo desde \"App.tsx\" el parametro \"idcurso\" y le indicamos \r\n//                       que siempre sera de tipo \"string\"\r\n\r\n// cursoSeleccionado = tomamos el id del curso seleccionado y lo igualamos al {} correspondiente\r\n//                     dentro de DETALLE_CURSOS\r\n\r\n// {cursoSeleccionado ? cu...} = mostramos dinamicamente el titulo del curso seleccionado.\r\n\r\n// lines = indica como deben figurar las lineas debajo de cada \"objetivo\" de DETALLE_CURSOS \r\n\r\n// button = simplemente para que el elemento se pueda clickear\r\n\r\n// editarItemObjetivo = esto genera que si se hace click SOLO en el icono del boton\r\n//                      se ejecute la funcion \"editarItemObjetivo\", es decir, \r\n//                      impide que esta accion se propague hacia afuera y afecte a \r\n//                      \"borrarItemObjetivo\"\r\n\r\n// borrarItemObjetivo = se efectua cuando se hace click en cualquier lugar dentro del recuadro\r\n//                      que contiene al \"IonItem\", a excepcion del icono.\r\n\r\n// side = todo el set de \"IonItemOptions\" se debe mostrar en la izquierda del item (start)\r\n\r\n"]},"metadata":{},"sourceType":"module"}