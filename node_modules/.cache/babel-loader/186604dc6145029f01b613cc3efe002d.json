{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quadion\\\\Desktop\\\\Milanesas\\\\IONIC\\\\SECOND IONIC-REACT APP\\\\myApp\\\\src\\\\Componentes\\\\A\\xF1adirCursoModal.tsx\";\nimport React, { useRef, useState } from 'react';\nimport { IonCol, IonContent, IonGrid, IonHeader, IonModal, IonRow, IonTitle, IonToolbar, IonItem, IonLabel, IonInput, IonButton, IonText } from '@ionic/react';\n\nconst AñadirCursoModal = props => {\n  const [error, setError] = useState(\"\");\n  const tituloRef = useRef(null);\n\n  const grabar = () => {\n    const tituloIngresado = tituloRef.current.value;\n\n    if (!tituloIngresado || tituloIngresado.toString().trim().length === 0) {\n      setError(\"Ingresar titulo valido por favor!\");\n      return;\n    }\n\n    setError(\"\");\n    props.grabar(tituloIngresado.toString());\n  };\n\n  return /*#__PURE__*/React.createElement(IonModal, {\n    isOpen: props.mostrar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"A\\xF1adir Curso\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    position: \"floating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Titulo del Curso\"), /*#__PURE__*/React.createElement(IonInput, {\n    type: \"text\",\n    ref: tituloRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })))), error && /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonText, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }, error)))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"dark\",\n    fill: \"clear\",\n    onClick: props.cancelar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Cancelar\")), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    expand: \"block\",\n    color: \"secondary\",\n    onClick: grabar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Guardar\"))))));\n};\n\nexport default AñadirCursoModal; // tituloRef = conecto el input que el usuario ingresa para luego registrarlo y mostrarlo\n// grabar = funcion que uso para extraer lo ingresado por el usuario y ver que sea valido.\n//          Si lo es, se resetea \"setError\" y se lo pasa a \"Cursos.tsx\"\n// tituloRef.current! = indicamos que nunca sera null (!)\n// if(!tituloIngresado |... = no debe ser nulo, se le quitan los espacios blancos exedentes \n//                            y el largo no puede ser 0.","map":{"version":3,"sources":["C:/Users/Quadion/Desktop/Milanesas/IONIC/SECOND IONIC-REACT APP/myApp/src/Componentes/AñadirCursoModal.tsx"],"names":["React","useRef","useState","IonCol","IonContent","IonGrid","IonHeader","IonModal","IonRow","IonTitle","IonToolbar","IonItem","IonLabel","IonInput","IonButton","IonText","AñadirCursoModal","props","error","setError","tituloRef","grabar","tituloIngresado","current","value","toString","trim","length","mostrar","cancelar"],"mappings":"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","sourcesContent":["\r\nimport React, { useRef, useState } from 'react';\r\nimport {\r\n  IonCol,\r\n  IonContent,\r\n  IonGrid,\r\n  IonHeader,\r\n  IonModal,\r\n  IonRow,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonItem,\r\n  IonLabel,\r\n  IonInput,\r\n  IonButton,\r\n  IonText,\r\n} from '@ionic/react';\r\n\r\nconst AñadirCursoModal: React.FC<{\r\n  mostrar: boolean;\r\n  cancelar: () => void;\r\n  grabar: (titulo: string) => void;\r\n}> = (props) => {\r\n  const [error, setError] = useState(\"\");\r\n  const tituloRef = useRef<HTMLIonInputElement>(null);\r\n  const grabar = () => {\r\n    const tituloIngresado = tituloRef.current!.value;\r\n    if(!tituloIngresado || tituloIngresado.toString().trim().length===0){\r\n      setError(\"Ingresar titulo valido por favor!\");\r\n      return;\r\n    }\r\n    setError(\"\");\r\n    props.grabar(tituloIngresado.toString());\r\n  };\r\n\r\n  return (\r\n    <IonModal isOpen={props.mostrar}>\r\n\r\n      <IonHeader>\r\n        <IonToolbar color='primary'>\r\n          <IonTitle>Añadir Curso</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent>\r\n        <IonGrid>\r\n\r\n          <IonRow>\r\n            <IonCol>\r\n              <IonItem>\r\n                <IonLabel position='floating'>Titulo del Curso</IonLabel>\r\n                <IonInput type='text' ref={tituloRef}/>\r\n              </IonItem>\r\n            </IonCol>\r\n          </IonRow>\r\n\r\n          {error && \r\n            <IonRow className=\"ion-text-center\">\r\n              <IonCol>\r\n                <IonText color=\"danger\">\r\n                  <p>{error}</p>\r\n                </IonText>\r\n              </IonCol>\r\n            </IonRow>\r\n          }\r\n\r\n          <IonRow className='ion-text-center'>\r\n            <IonCol>\r\n              <IonButton color='dark' fill='clear' onClick={props.cancelar}>\r\n                Cancelar\r\n              </IonButton>\r\n            </IonCol>\r\n\r\n            <IonCol>\r\n              <IonButton expand='block' color='secondary' onClick={grabar}>\r\n                Guardar\r\n              </IonButton>\r\n            </IonCol>\r\n          </IonRow>\r\n\r\n        </IonGrid>\r\n      </IonContent>\r\n\r\n    </IonModal>\r\n  )\r\n}\r\n\r\nexport default AñadirCursoModal;\r\n\r\n\r\n// tituloRef = conecto el input que el usuario ingresa para luego registrarlo y mostrarlo\r\n\r\n// grabar = funcion que uso para extraer lo ingresado por el usuario y ver que sea valido.\r\n//          Si lo es, se resetea \"setError\" y se lo pasa a \"Cursos.tsx\"\r\n// tituloRef.current! = indicamos que nunca sera null (!)\r\n// if(!tituloIngresado |... = no debe ser nulo, se le quitan los espacios blancos exedentes \r\n//                            y el largo no puede ser 0."]},"metadata":{},"sourceType":"module"}