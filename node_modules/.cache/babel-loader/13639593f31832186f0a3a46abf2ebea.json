{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quadion\\\\Desktop\\\\Milanesas\\\\IONIC\\\\SECOND IONIC-REACT APP\\\\myApp\\\\src\\\\Paginas\\\\Cursos.tsx\";\nimport React, { useState, useContext } from 'react';\nimport { IonButton, IonCard, IonCardContent, IonCardHeader, IonCardTitle, IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonTitle, IonToolbar, IonButtons, IonIcon, isPlatform, IonFab, IonFabButton } from '@ionic/react'; // Importo iconos\n\nimport { addOutline } from 'ionicons/icons'; // Importo Componentes\n\nimport AñadirCursoModal from \"../Componentes/AñadirCursoModal\"; // Import Contexto\n\nimport CursosContexto from '../Datos/CursosContexto';\nexport const DETALLE_CURSOS = [{\n  id: 'curso1',\n  titulo: 'Vinos',\n  objetivos: [{\n    id: 'curso101',\n    texto: 'Termina el curso de Vino!'\n  }, {\n    id: 'curso102',\n    texto: 'Aprende mucho de Vino.'\n  }]\n}, {\n  id: 'curso2',\n  titulo: 'Cerveza',\n  objetivos: [{\n    id: 'curso201',\n    texto: 'Termina el curso de Cerveza!'\n  }, {\n    id: 'curso202',\n    texto: 'Aprende mucho de Cerveza.'\n  }]\n}, {\n  id: 'curso3',\n  titulo: 'Vodka',\n  objetivos: [{\n    id: 'curso301',\n    texto: 'Termina el curso de Vodka!'\n  }, {\n    id: 'curso302',\n    texto: 'Aprende mucho de Vodka.'\n  }]\n}];\n\nconst Cursos = () => {\n  const [añadiendo, setAñadiendo] = useState(false);\n  const cursosCtx = useContext(CursosContexto);\n\n  const inicioAñadirCurso = () => {\n    setAñadiendo(true);\n  };\n\n  const cancelarAñadirCurso = () => {\n    setAñadiendo(false);\n  };\n\n  const AñadirCurso = titulo => {\n    cursosCtx.añadirCurso(titulo);\n    setAñadiendo(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AñadirCursoModal, {\n    mostrar: añadiendo,\n    cancelar: cancelarAñadirCurso,\n    grabar: AñadirCurso,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"CURSOS\"), !isPlatform(\"android\") && /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    onClick: inicioAñadirCurso,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"icon-only\",\n    icon: addOutline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, cursosCtx.cursos.map(curso => /*#__PURE__*/React.createElement(IonRow, {\n    key: curso.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    \"size-md\": \"4\",\n    \"offset-md\": \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonCardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }\n  }, curso.titulo)), /*#__PURE__*/React.createElement(IonCardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ion-text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    fill: \"clear\",\n    color: \"secondary\",\n    routerLink: `/cursos/${curso.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, \"Ver Objetivos del Curso\")))))))), isPlatform(\"android\") && /*#__PURE__*/React.createElement(IonFab, {\n    horizontal: \"end\",\n    vertical: \"bottom\",\n    slot: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonFabButton, {\n    color: \"secondary\",\n    onClick: inicioAñadirCurso,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: addOutline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }))))));\n};\n\nexport default Cursos; // \"IonHeader\" para la toolbar y \"IonContent\" para el contenido de la pagina\n// Aqui planteo dos formas de configurar botones para movernos entre paginas:\n// routerLink = indica el path (url) a seguir al hacer click (funciona como link)\n// onClick = indica en este caso el cambio de pagina a traves de navegacion programada\n// useHistory = permite ingresar al historial del navegador y cambiarlo. Cumple lo mismo que \n//              \"routerLink\" pero genera un boton en lugar de un link a url normal.\n// .push = empuja un nuevo camino \"path\" en el historial\n// size-md = alineo la colunma (max de 12) donde 4 + 4 = 8 y me quedan 2 por lado para centrar\n// cursosCtx.cursos.map() = por cada curso repetimos todo el contenido de \"IonRow\"\n// {`/cursos/${curso.id}`} = indicamos dinamicamente el \"path\" al que debe ir el boton\n// useContext = para aplicar la importacion de \"CursosContexto\" desde la funcion \"cursosCtx\"\n//              Cada que cambiemos las funciones en \"CursosContexto\" con un nuevo State,\n//              obtendremos el objeto actualizado en esta pagina.","map":{"version":3,"sources":["C:/Users/Quadion/Desktop/Milanesas/IONIC/SECOND IONIC-REACT APP/myApp/src/Paginas/Cursos.tsx"],"names":["React","useState","useContext","IonButton","IonCard","IonCardContent","IonCardHeader","IonCardTitle","IonCol","IonContent","IonGrid","IonHeader","IonPage","IonRow","IonTitle","IonToolbar","IonButtons","IonIcon","isPlatform","IonFab","IonFabButton","addOutline","AñadirCursoModal","CursosContexto","DETALLE_CURSOS","id","titulo","objetivos","texto","Cursos","añadiendo","setAñadiendo","cursosCtx","inicioAñadirCurso","cancelarAñadirCurso","AñadirCurso","añadirCurso","cursos","map","curso"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useContext } from 'react';\r\nimport {\r\n  IonButton,\r\n  IonCard,\r\n  IonCardContent,\r\n  IonCardHeader,\r\n  IonCardTitle,\r\n  IonCol,\r\n  IonContent,\r\n  IonGrid,\r\n  IonHeader,\r\n  IonPage,\r\n  IonRow,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonIcon,\r\n  isPlatform,\r\n  IonFab,\r\n  IonFabButton,\r\n} from '@ionic/react';\r\n// Importo iconos\r\nimport { addOutline } from 'ionicons/icons';\r\n// Importo Componentes\r\nimport AñadirCursoModal from \"../Componentes/AñadirCursoModal\";\r\n// Import Contexto\r\nimport CursosContexto from '../Datos/CursosContexto';\r\n\r\nexport const DETALLE_CURSOS = [\r\n  {\r\n    id: 'curso1',\r\n    titulo: 'Vinos',\r\n    objetivos: [\r\n      { id: 'curso101', texto: 'Termina el curso de Vino!' },\r\n      { id: 'curso102', texto: 'Aprende mucho de Vino.' },\r\n    ],\r\n  },\r\n  {\r\n    id: 'curso2',\r\n    titulo: 'Cerveza',\r\n    objetivos: [\r\n      { id: 'curso201', texto: 'Termina el curso de Cerveza!' },\r\n      { id: 'curso202', texto: 'Aprende mucho de Cerveza.' },\r\n    ],\r\n  },\r\n  {\r\n    id: 'curso3',\r\n    titulo: 'Vodka',\r\n    objetivos: [\r\n      { id: 'curso301', texto: 'Termina el curso de Vodka!' },\r\n      { id: 'curso302', texto: 'Aprende mucho de Vodka.' },\r\n    ],\r\n  },\r\n];\r\n\r\nconst Cursos: React.FC = () => {\r\n  const [añadiendo, setAñadiendo] = useState(false);\r\n  const cursosCtx = useContext(CursosContexto);  \r\n  const inicioAñadirCurso = () => {\r\n    setAñadiendo(true);\r\n  };\r\n  const cancelarAñadirCurso = () => {\r\n    setAñadiendo(false);\r\n  };\r\n  const AñadirCurso = (titulo: string) => {\r\n    cursosCtx.añadirCurso(titulo); \r\n    setAñadiendo(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AñadirCursoModal \r\n        mostrar={añadiendo} \r\n        cancelar={cancelarAñadirCurso}\r\n        grabar={AñadirCurso}\r\n      />\r\n      <IonPage>\r\n        <IonHeader>\r\n          <IonToolbar color='primary'>\r\n            <IonTitle>CURSOS</IonTitle>\r\n            {!isPlatform(\"android\") &&\r\n                <IonButtons slot=\"end\">\r\n                  <IonButton onClick={inicioAñadirCurso}>\r\n                    <IonIcon slot =\"icon-only\" icon={addOutline}/>\r\n                  </IonButton>\r\n                </IonButtons>\r\n              }\r\n          </IonToolbar>\r\n        </IonHeader>\r\n        <IonContent>\r\n          <IonGrid>\r\n            {cursosCtx.cursos.map((curso) => (\r\n              <IonRow key={curso.id}>\r\n                <IonCol size-md='4' offset-md='4'>\r\n                  <IonCard>\r\n                    <IonCardHeader>\r\n                      <IonCardTitle>\r\n                        {curso.titulo}\r\n                      </IonCardTitle>\r\n                    </IonCardHeader>\r\n                    <IonCardContent>\r\n                      <div className=\"ion-text-right\">\r\n                        <IonButton fill=\"clear\" color=\"secondary\" routerLink={`/cursos/${curso.id}`}>\r\n                          Ver Objetivos del Curso\r\n                        </IonButton>\r\n                      </div>\r\n                    </IonCardContent>\r\n                  </IonCard>\r\n                </IonCol>\r\n              </IonRow>\r\n            ))}\r\n          </IonGrid>\r\n          {/*<div>\r\n            Mismo resultado, distinto funcionamiento:\r\n            <IonButton routerLink='/objetivos'>Ver Objetivos 1</IonButton>\r\n            <IonButton onClick={cambiarPantallaHandler}>Ver Objetivos 2</IonButton>\r\n          </div>\r\n          */}\r\n          {isPlatform(\"android\") && \r\n              <IonFab horizontal=\"end\" vertical=\"bottom\" slot=\"fixed\">\r\n                <IonFabButton color=\"secondary\" onClick={inicioAñadirCurso}>\r\n                  <IonIcon icon={addOutline}/>\r\n                </IonFabButton>\r\n              </IonFab>\r\n            }\r\n        </IonContent>\r\n      </IonPage>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Cursos;\r\n\r\n\r\n\r\n\r\n// \"IonHeader\" para la toolbar y \"IonContent\" para el contenido de la pagina\r\n\r\n// Aqui planteo dos formas de configurar botones para movernos entre paginas:\r\n// routerLink = indica el path (url) a seguir al hacer click (funciona como link)\r\n// onClick = indica en este caso el cambio de pagina a traves de navegacion programada\r\n\r\n// useHistory = permite ingresar al historial del navegador y cambiarlo. Cumple lo mismo que \r\n//              \"routerLink\" pero genera un boton en lugar de un link a url normal.\r\n\r\n// .push = empuja un nuevo camino \"path\" en el historial\r\n\r\n// size-md = alineo la colunma (max de 12) donde 4 + 4 = 8 y me quedan 2 por lado para centrar\r\n\r\n// cursosCtx.cursos.map() = por cada curso repetimos todo el contenido de \"IonRow\"\r\n\r\n// {`/cursos/${curso.id}`} = indicamos dinamicamente el \"path\" al que debe ir el boton\r\n\r\n// useContext = para aplicar la importacion de \"CursosContexto\" desde la funcion \"cursosCtx\"\r\n//              Cada que cambiemos las funciones en \"CursosContexto\" con un nuevo State,\r\n//              obtendremos el objeto actualizado en esta pagina."]},"metadata":{},"sourceType":"module"}