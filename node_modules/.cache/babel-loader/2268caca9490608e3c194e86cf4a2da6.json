{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quadion\\\\Desktop\\\\Milanesas\\\\APPS\\\\SECOND IONIC-REACT APP\\\\myApp\\\\src\\\\Paginas\\\\Objetivos.tsx\";\n// 2da pagina creada:\n// Misma estructura que \"Cursos.tsx\"\nimport React from 'react';\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonButtons, IonBackButton, IonList, IonItem, IonLabel, IonItemSliding, IonItemOptions, IonItemOption, IonIcon // permite que todos los elementos dentro puedan deslizarce hacia los lados\n} from '@ionic/react';\nimport { useParams } from \"react-router-dom\"; // Permite extraer parametros obtenidos en esta pagina. \n// Importo array de cursos:\n\nimport { DETALLE_CURSOS } from \"./Cursos\"; // Importo iconos:\n\nimport { create, trash } from 'ionicons/icons';\n\nconst Objetivos = () => {\n  const idCursoSeleccionado = useParams().idcurso;\n  const cursoSeleccionado = DETALLE_CURSOS.find(curso => curso.id === idCursoSeleccionado);\n\n  const borrarItemObjetivo = () => {};\n\n  const editarItemObjetivo = evento => {\n    evento.stopPropagation();\n  };\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonBackButton, {\n    defaultHref: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, cursoSeleccionado ? cursoSeleccionado.titulo : \"No existe el curso\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, cursoSeleccionado && /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, cursoSeleccionado.objetivos.map(objetivo => /*#__PURE__*/React.createElement(IonItemSliding, {\n    key: objetivo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonItemOptions, {\n    side: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonItemOption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"icon-only\",\n    icon: trash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(IonItem, {\n    lines: \"full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, \"    \", /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, objetivo.texto)), /*#__PURE__*/React.createElement(IonItemOptions, {\n    side: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonItemOption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"end\",\n    icon: create,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }\n  }))))))));\n};\n\nexport default Objetivos; // IonPage = necesario para componentes lugadoa a traves de routing deben estar dentro\n// slot = indicar donde posicionar el \"back button\" dentro del toolbar (start,end = izquierda,derecha)\n// defaultHref = indica un url por default en caso de que ionic no sepa desde donde se viene\n// useParams = permite extraer parametros obtenido en esta pagina. \n//             Implementado para \"idcurso\" en \"Cursos.tsx\"\n// idCursoSeleccionado = traigo desde \"App.tsx\" el parametro \"idcurso\" y le indicamos \n//                       que siempre sera de tipo \"string\"\n// cursoSeleccionado = tomamos el id del curso seleccionado y lo igualamos al {} correspondiente\n//                     dentro de DETALLE_CURSOS\n// {cursoSeleccionado ? cu...} = mostramos dinamicamente el titulo del curso seleccionado.\n// lines = indica como deben figurar las lineas debajo de cada \"objetivo\" de DETALLE_CURSOS \n// button = simplemente para que el elemento se pueda clickear\n// editarItemObjetivo = esto genera que si se hace click SOLO en el icono del boton\n//                      se ejecute la funcion \"editarItemObjetivo\", es decir, \n//                      impide que esta accion se propague hacia afuera y afecte a \n//                      \"borrarItemObjetivo\"\n// borrarItemObjetivo = se efectua cuando se hace click en cualquier lugar dentro del recuadro\n//                      que contiene al \"IonItem\", a excepcion del icono.\n// side = todo el set de \"IonItemOptions\" se debe mostrar en la izquierda del item (start)","map":{"version":3,"sources":["C:/Users/Quadion/Desktop/Milanesas/APPS/SECOND IONIC-REACT APP/myApp/src/Paginas/Objetivos.tsx"],"names":["React","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonButtons","IonBackButton","IonList","IonItem","IonLabel","IonItemSliding","IonItemOptions","IonItemOption","IonIcon","useParams","DETALLE_CURSOS","create","trash","Objetivos","idCursoSeleccionado","idcurso","cursoSeleccionado","find","curso","id","borrarItemObjetivo","editarItemObjetivo","evento","stopPropagation","titulo","objetivos","map","objetivo","texto"],"mappings":"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","sourcesContent":["// 2da pagina creada:\r\n// Misma estructura que \"Cursos.tsx\"\r\nimport React from 'react'\r\n\r\nimport {\r\n  IonContent,\r\n  IonHeader,\r\n  IonPage,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonBackButton,\r\n  IonList,\r\n  IonItem,\r\n  IonLabel,\r\n  IonItemSliding,\r\n  IonItemOptions,\r\n  IonItemOption,\r\n  IonIcon,     // permite que todos los elementos dentro puedan deslizarce hacia los lados\r\n} from '@ionic/react'\r\n\r\nimport { useParams } from \"react-router-dom\" // Permite extraer parametros obtenidos en esta pagina. \r\n\r\n// Importo array de cursos:\r\nimport { DETALLE_CURSOS } from \"./Cursos\"\r\n\r\n// Importo iconos:\r\nimport { create, trash } from 'ionicons/icons'\r\n\r\n\r\nconst Objetivos: React.FC = () => {\r\n\r\n  const idCursoSeleccionado = useParams<{ idcurso: string }>().idcurso\r\n  const cursoSeleccionado = DETALLE_CURSOS.find(curso => curso.id === idCursoSeleccionado)\r\n\r\n  const borrarItemObjetivo = () => {}\r\n\r\n  const editarItemObjetivo = (evento: React.MouseEvent) => {\r\n    evento.stopPropagation()\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <IonHeader> \r\n        <IonToolbar color=\"primary\">\r\n          <IonButtons slot='start'>\r\n            <IonBackButton defaultHref=\"/\"/>\r\n          </IonButtons>\r\n\r\n          <IonTitle>\r\n            {cursoSeleccionado ? cursoSeleccionado.titulo : \"No existe el curso\"}\r\n          </IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n        <IonContent>\r\n          {cursoSeleccionado && (\r\n            <IonList>\r\n              {cursoSeleccionado.objetivos.map(objetivo => (\r\n\r\n                <IonItemSliding key={objetivo.id}>\r\n                  <IonItemOptions side=\"start\">\r\n                    <IonItemOption>\r\n                      <IonIcon slot =\"icon-only\" icon={trash}/>\r\n                    </IonItemOption>\r\n                  </IonItemOptions>\r\n\r\n                  <IonItem lines=\"full\">    {/*button onClick={borrarItemObjetivo}*/}\r\n                    <IonLabel>\r\n                      {objetivo.texto}\r\n                    </IonLabel> \r\n\r\n                    {/* <IonButton fill =\"clear\" color =\"dark\" slot=\"end\" onClick={editarItemObjetivo}>\r\n                      <IonIcon slot=\"icon-only\" icon={create}/>\r\n                    </IonButton> */}\r\n                  </IonItem>\r\n\r\n                  <IonItemOptions side=\"start\">\r\n                    <IonItemOption>\r\n                      <IonIcon slot =\"end\" icon={create}/>\r\n                    </IonItemOption>\r\n                  </IonItemOptions>\r\n                </IonItemSliding>\r\n\r\n              ))} \r\n            </IonList>\r\n          )}\r\n        </IonContent>   \r\n\r\n    </IonPage>\r\n  )\r\n}\r\n\r\nexport default Objetivos\r\n\r\n// IonPage = necesario para componentes lugadoa a traves de routing deben estar dentro\r\n\r\n// slot = indicar donde posicionar el \"back button\" dentro del toolbar (start,end = izquierda,derecha)\r\n\r\n// defaultHref = indica un url por default en caso de que ionic no sepa desde donde se viene\r\n\r\n// useParams = permite extraer parametros obtenido en esta pagina. \r\n//             Implementado para \"idcurso\" en \"Cursos.tsx\"\r\n\r\n// idCursoSeleccionado = traigo desde \"App.tsx\" el parametro \"idcurso\" y le indicamos \r\n//                       que siempre sera de tipo \"string\"\r\n\r\n// cursoSeleccionado = tomamos el id del curso seleccionado y lo igualamos al {} correspondiente\r\n//                     dentro de DETALLE_CURSOS\r\n\r\n// {cursoSeleccionado ? cu...} = mostramos dinamicamente el titulo del curso seleccionado.\r\n\r\n// lines = indica como deben figurar las lineas debajo de cada \"objetivo\" de DETALLE_CURSOS \r\n\r\n// button = simplemente para que el elemento se pueda clickear\r\n\r\n// editarItemObjetivo = esto genera que si se hace click SOLO en el icono del boton\r\n//                      se ejecute la funcion \"editarItemObjetivo\", es decir, \r\n//                      impide que esta accion se propague hacia afuera y afecte a \r\n//                      \"borrarItemObjetivo\"\r\n\r\n// borrarItemObjetivo = se efectua cuando se hace click en cualquier lugar dentro del recuadro\r\n//                      que contiene al \"IonItem\", a excepcion del icono.\r\n\r\n// side = todo el set de \"IonItemOptions\" se debe mostrar en la izquierda del item (start)\r\n\r\n"]},"metadata":{},"sourceType":"module"}