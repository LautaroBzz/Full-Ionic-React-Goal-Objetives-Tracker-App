{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quadion\\\\Desktop\\\\Milanesas\\\\APPS\\\\SECOND IONIC-REACT APP\\\\myApp\\\\src\\\\Paginas\\\\Objetivos.tsx\";\n// 2da pagina creada:\n// Misma estructura que \"Cursos.tsx\"\nimport React from 'react';\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonButtons, IonBackButton, IonList, IonItem, IonLabel, IonButton, IonIcon } from '@ionic/react';\nimport { useParams } from \"react-router-dom\"; // Permite extraer parametros obtenidos en esta pagina. \n// Importo array de cursos:\n\nimport { DETALLE_CURSOS } from \"./Cursos\"; // Importo iconos:\n\nimport { create } from 'ionicons/icons';\n\nconst Objetivos = () => {\n  const idCursoSeleccionado = useParams().idcurso;\n  const cursoSeleccionado = DETALLE_CURSOS.find(curso => curso.id === idCursoSeleccionado);\n\n  const borrarItemObjetivo = () => {};\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonBackButton, {\n    defaultHref: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, cursoSeleccionado ? cursoSeleccionado.titulo : \"No existe el curso\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, cursoSeleccionado && /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, cursoSeleccionado.objetivos.map(objetivo => /*#__PURE__*/React.createElement(IonItem, {\n    key: objetivo.id,\n    lines: \"full\",\n    button: true,\n    onClick: borrarItemObjetivo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, objetivo.texto), /*#__PURE__*/React.createElement(IonButton, {\n    slor: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: create,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })))))));\n};\n\nexport default Objetivos; // IonPage = necesario para componentes lugadoa a traves de routing deben estar dentro\n// slot = indicar donde posicionar el \"back button\" dentro del toolbar (start = izquierda)\n// defaultHref = indica un url por default en caso de que ionic no sepa desde donde se viene\n// useParams = permite extraer parametros obtenido en esta pagina. \n//             Implementado para \"idcurso\" en \"Cursos.tsx\"\n// idCursoSeleccionado = traigo desde \"App.tsx\" el parametro \"idcurso\" y le indicamos \n//                       que siempre sera de tipo \"string\"\n// cursoSeleccionado = tomamos el id del curso seleccionado y lo igualamos al {} correspondiente\n//                     dentro de DETALLE_CURSOS\n// {cursoSeleccionado ? cu...} = mostramos dinamicamente el titulo del curso seleccionado.\n// lines = indica como deben figurar las lineas debajo de cada \"objetivo\" de DETALLE_CURSOS \n// button = simplemente para que el elemento se pueda clickear","map":{"version":3,"sources":["C:/Users/Quadion/Desktop/Milanesas/APPS/SECOND IONIC-REACT APP/myApp/src/Paginas/Objetivos.tsx"],"names":["React","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonButtons","IonBackButton","IonList","IonItem","IonLabel","IonButton","IonIcon","useParams","DETALLE_CURSOS","create","Objetivos","idCursoSeleccionado","idcurso","cursoSeleccionado","find","curso","id","borrarItemObjetivo","titulo","objetivos","map","objetivo","texto"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,UADF,EAEEC,SAFF,EAGEC,OAHF,EAIEC,QAJF,EAKEC,UALF,EAMEC,UANF,EAOEC,aAPF,EAQEC,OARF,EASEC,OATF,EAUEC,QAVF,EAWEC,SAXF,EAYEC,OAZF,QAaO,cAbP;AAeA,SAASC,SAAT,QAA0B,kBAA1B,C,CAA6C;AAE7C;;AACA,SAASC,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAGA,MAAMC,SAAmB,GAAG,MAAM;AAEhC,QAAMC,mBAAmB,GAAGJ,SAAS,GAAwBK,OAA7D;AACA,QAAMC,iBAAiB,GAAGL,cAAc,CAACM,IAAf,CAAoBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaL,mBAA1C,CAA1B;;AAEA,QAAMM,kBAAkB,GAAG,MAAM,CAAE,CAAnC;;AAEA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,WAAW,EAAC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,iBAAiB,GAAGA,iBAAiB,CAACK,MAArB,GAA8B,oBADlD,CALF,CADF,CAFF,eAcI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,iBAAiB,iBAChB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,iBAAiB,CAACM,SAAlB,CAA4BC,GAA5B,CAAgCC,QAAQ,iBAEvC,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,QAAQ,CAACL,EAAvB;AAA2B,IAAA,KAAK,EAAC,MAAjC;AAAwC,IAAA,MAAM,MAA9C;AAA+C,IAAA,OAAO,EAAEC,kBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,QAAQ,CAACC,KADZ,CADF,eAKE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEb,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CAFD,CADH,CAFJ,CAdJ,CADF;AAqCD,CA5CD;;AA8CA,eAAeC,SAAf,C,CAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA","sourcesContent":["// 2da pagina creada:\r\n// Misma estructura que \"Cursos.tsx\"\r\nimport React from 'react'\r\n\r\nimport {\r\n  IonContent,\r\n  IonHeader,\r\n  IonPage,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonBackButton,\r\n  IonList,\r\n  IonItem,\r\n  IonLabel,\r\n  IonButton,\r\n  IonIcon,\r\n} from '@ionic/react'\r\n\r\nimport { useParams } from \"react-router-dom\" // Permite extraer parametros obtenidos en esta pagina. \r\n\r\n// Importo array de cursos:\r\nimport { DETALLE_CURSOS } from \"./Cursos\"\r\n\r\n// Importo iconos:\r\nimport { create } from 'ionicons/icons'\r\n\r\n\r\nconst Objetivos: React.FC = () => {\r\n\r\n  const idCursoSeleccionado = useParams<{ idcurso: string }>().idcurso\r\n  const cursoSeleccionado = DETALLE_CURSOS.find(curso => curso.id === idCursoSeleccionado)\r\n\r\n  const borrarItemObjetivo = () => {}\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <IonHeader> \r\n        <IonToolbar color=\"primary\">\r\n          <IonButtons slot='start'>\r\n            <IonBackButton defaultHref=\"/\"/>\r\n          </IonButtons>\r\n\r\n          <IonTitle>\r\n            {cursoSeleccionado ? cursoSeleccionado.titulo : \"No existe el curso\"}\r\n          </IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n        <IonContent>\r\n          {cursoSeleccionado && (\r\n            <IonList>\r\n              {cursoSeleccionado.objetivos.map(objetivo => (\r\n\r\n                <IonItem key={objetivo.id} lines=\"full\" button onClick={borrarItemObjetivo}>\r\n                  <IonLabel>\r\n                    {objetivo.texto}\r\n                  </IonLabel> \r\n\r\n                  <IonButton slor=\"end\">\r\n                    <IonIcon icon={create}/>\r\n                  </IonButton>\r\n                </IonItem>\r\n\r\n              ))}\r\n            </IonList>\r\n          )}\r\n        </IonContent>   \r\n\r\n    </IonPage>\r\n  )\r\n}\r\n\r\nexport default Objetivos\r\n\r\n// IonPage = necesario para componentes lugadoa a traves de routing deben estar dentro\r\n\r\n// slot = indicar donde posicionar el \"back button\" dentro del toolbar (start = izquierda)\r\n\r\n// defaultHref = indica un url por default en caso de que ionic no sepa desde donde se viene\r\n\r\n// useParams = permite extraer parametros obtenido en esta pagina. \r\n//             Implementado para \"idcurso\" en \"Cursos.tsx\"\r\n\r\n// idCursoSeleccionado = traigo desde \"App.tsx\" el parametro \"idcurso\" y le indicamos \r\n//                       que siempre sera de tipo \"string\"\r\n\r\n// cursoSeleccionado = tomamos el id del curso seleccionado y lo igualamos al {} correspondiente\r\n//                     dentro de DETALLE_CURSOS\r\n\r\n// {cursoSeleccionado ? cu...} = mostramos dinamicamente el titulo del curso seleccionado.\r\n\r\n// lines = indica como deben figurar las lineas debajo de cada \"objetivo\" de DETALLE_CURSOS \r\n\r\n// button = simplemente para que el elemento se pueda clickear"]},"metadata":{},"sourceType":"module"}