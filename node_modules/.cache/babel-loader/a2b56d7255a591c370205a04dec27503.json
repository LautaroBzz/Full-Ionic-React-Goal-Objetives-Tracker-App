{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quadion\\\\Desktop\\\\Milanesas\\\\APPS\\\\SECOND IONIC-REACT APP\\\\myApp\\\\src\\\\Datos\\\\CursosContextoProveedor.tsx\";\n// 2da pagina de Datos\n// 9vo elemento creado\n// Todo esto lo llevo para App.tsx!!!!!\nimport React, { useState } from 'react';\nimport CursosContexto from \"./CursosContexto\";\n\nconst CursosContectoProveedor = props => {\n  const [cursos, setCursos] = useState([{\n    id: \"c1\",\n    titulo: \"Making Wine!\",\n    // Curso inicial de prueba\n    objetivos: []\n  }]); // Creo funciones para cada accion que detalle en \"CursosContexto\"\n\n  const añadirCurso = titulo => {\n    const nuevoCurso = {\n      id: new Date().toString(),\n      titulo,\n      objetivos: []\n    };\n    setCursos(actualCurso => {\n      return actualCurso.concat(nuevoCurso);\n    });\n  };\n\n  const añadirObjetivo = (cursoId, texto) => {\n    const nuevoObjetivo = {\n      id: Math.random().toString(),\n      texto\n    };\n    setCursos(cursosActuales => {\n      const cursosActualizados = [...cursosActuales];\n      const cursoActualizadoIndex = cursosActualizados.findIndex(curso => curso.id === cursoId);\n      const objetivosActualizados = cursosActualizados[cursoActualizadoIndex].objetivos.concat(nuevoObjetivo);\n      const cursoActualizado = { ...cursosActualizados[cursoActualizadoIndex]\n      };\n      cursoActualizado.objetivos = objetivosActualizados;\n      cursosActualizados[cursoActualizadoIndex] = cursoActualizado;\n      return cursosActualizados;\n    });\n  };\n\n  const borrarObjetivo = (cursoId, objetivoId) => {\n    setCursos(cursosActuales => {\n      const cursosActualizados = [...cursosActuales];\n      const cursoActualizadoIndex = cursosActualizados.findIndex(curso => curso.id === cursoId);\n      const objetivosActualizados = cursosActualizados[cursoActualizadoIndex].objetivos.filter(objetivo => objetivo.id !== objetivoId);\n      const cursoActualizado = { ...cursosActualizados[cursoActualizadoIndex]\n      };\n      cursoActualizado.objetivos = objetivosActualizados;\n      cursosActualizados[cursoActualizadoIndex] = cursoActualizado;\n      return cursosActualizados;\n    });\n  };\n\n  const actualizarObjetivo = (cursoId, objetivoId, nuevoTexto) => {\n    setCursos(cursosActuales => {\n      const cursosActualizados = [...cursosActuales];\n      const cursoActualizadoIndex = cursosActualizados.findIndex(curso => curso.id === cursoId);\n      const objetivosActualizados = cursosActualizados[cursoActualizadoIndex].objetivos.slice();\n      const objetivosActualizadosIndex = objetivosActualizados.findIndex(objetivo => objetivo.id === objetivoId);\n      const objetivoActualizado = { ...objetivosActualizados\n      };\n      const cursoActualizado = { ...cursosActualizados[cursoActualizadoIndex]\n      };\n      cursoActualizado.objetivos = objetivosActualizados;\n      cursosActualizados[cursoActualizadoIndex] = cursoActualizado;\n      return cursosActualizados;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(CursosContexto.Provider, {\n    value: {\n      cursos: cursos,\n      añadirCurso,\n      añadirObjetivo,\n      borrarObjetivo,\n      actualizarObjetivo\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default CursosContectoProveedor; // Importo desde \"CursoContecto\" la interface \"Cursos\"\n// useState <Curso[]> = indico que los datos que voy a menjar en este State va a ser\n//                      un vector de Cursos. Asi aplicamos el mismo formato inicial\n//                      del State que es ([]) >> aca creamos un curso inical de ejemplo\n// nuevoCurso = le indicamos que la constante desde ser del tipo \"Curso\" \n//              (traido desde \"CursosContexto\") donde:\n//              interface Curso {\n//                id: string;\n//                titulo: string;\n//                objetivos: Objetivo[]; \n//              };\n// id: new Date().toString() = cada vez que añadimos un curso nuevo, este toma un id\n//                             igual al momento exacto a que se creo, en formato de texto.\n// actualCurso.concat(nuevoCurso) = concateno los cursos previos al nuevo.","map":{"version":3,"sources":["C:/Users/Quadion/Desktop/Milanesas/APPS/SECOND IONIC-REACT APP/myApp/src/Datos/CursosContextoProveedor.tsx"],"names":["React","useState","CursosContexto","CursosContectoProveedor","props","cursos","setCursos","id","titulo","objetivos","añadirCurso","nuevoCurso","Date","toString","actualCurso","concat","añadirObjetivo","cursoId","texto","nuevoObjetivo","Math","random","cursosActuales","cursosActualizados","cursoActualizadoIndex","findIndex","curso","objetivosActualizados","cursoActualizado","borrarObjetivo","objetivoId","filter","objetivo","actualizarObjetivo","nuevoTexto","slice","objetivosActualizadosIndex","objetivoActualizado","children"],"mappings":"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","sourcesContent":["// 2da pagina de Datos\r\n// 9vo elemento creado\r\n\r\n// Todo esto lo llevo para App.tsx!!!!!\r\n\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport CursosContexto, { Curso, Objetivo } from \"./CursosContexto\";\r\n\r\n\r\nconst CursosContectoProveedor: React.FC = props => {\r\n\r\n  const [cursos, setCursos] = useState <Curso[]> ([\r\n    {\r\n      id: \"c1\",\r\n      titulo: \"Making Wine!\",         // Curso inicial de prueba\r\n      objetivos: []\r\n    }\r\n  ]);\r\n\r\n  // Creo funciones para cada accion que detalle en \"CursosContexto\"\r\n\r\n  const añadirCurso = (titulo: string) => {\r\n    const nuevoCurso: Curso = {\r\n      id: new Date().toString(),\r\n      titulo,\r\n      objetivos: []\r\n    };\r\n    setCursos((actualCurso) => {\r\n      return actualCurso.concat(nuevoCurso);\r\n    });\r\n  };\r\n\r\n\r\n  const añadirObjetivo = (cursoId: string, texto: string) => {\r\n    const nuevoObjetivo: Objetivo = { id: Math.random().toString(), texto };\r\n\r\n    setCursos(cursosActuales => {\r\n      const cursosActualizados = [...cursosActuales];\r\n      const cursoActualizadoIndex = cursosActualizados.findIndex(curso => curso.id === cursoId);\r\n      const objetivosActualizados =\r\n        cursosActualizados[cursoActualizadoIndex].objetivos.concat(nuevoObjetivo);\r\n      const cursoActualizado = {...cursosActualizados[cursoActualizadoIndex]};\r\n      cursoActualizado.objetivos = objetivosActualizados;\r\n      cursosActualizados[cursoActualizadoIndex] = cursoActualizado;\r\n      return cursosActualizados;\r\n    });\r\n  };\r\n\r\n\r\n  const borrarObjetivo = (cursoId: string, objetivoId: string) => {\r\n    setCursos((cursosActuales) => {\r\n      const cursosActualizados = [...cursosActuales]\r\n      const cursoActualizadoIndex = cursosActualizados.findIndex(curso => curso.id === cursoId);\r\n      const objetivosActualizados = \r\n        cursosActualizados[\r\n          cursoActualizadoIndex\r\n        ].objetivos.filter((objetivo) => objetivo.id !== objetivoId);\r\n      const cursoActualizado = { ...cursosActualizados[cursoActualizadoIndex] };\r\n      cursoActualizado.objetivos = objetivosActualizados;\r\n      cursosActualizados[cursoActualizadoIndex] = cursoActualizado;\r\n      return cursosActualizados;\r\n    });\r\n  };\r\n    \r\n  \r\n  const actualizarObjetivo = (cursoId: string, objetivoId: string, nuevoTexto: string) => {\r\n    setCursos((cursosActuales) => {\r\n      const cursosActualizados = [...cursosActuales]\r\n      const cursoActualizadoIndex = cursosActualizados.findIndex(curso => curso.id === cursoId);\r\n      const objetivosActualizados = \r\n        cursosActualizados[cursoActualizadoIndex].objetivos.slice();\r\n      const objetivosActualizadosIndex = objetivosActualizados.findIndex(\r\n        (objetivo) => objetivo.id === objetivoId\r\n      );\r\n      const objetivoActualizado = { ...objetivosActualizados }\r\n      const cursoActualizado = { ...cursosActualizados[cursoActualizadoIndex] };\r\n      cursoActualizado.objetivos = objetivosActualizados;\r\n      cursosActualizados[cursoActualizadoIndex] = cursoActualizado;\r\n      return cursosActualizados;\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <CursosContexto.Provider value={{\r\n      cursos: cursos,\r\n      añadirCurso,\r\n      añadirObjetivo,\r\n      borrarObjetivo,\r\n      actualizarObjetivo\r\n    }}>\r\n      {props.children}\r\n    </CursosContexto.Provider>\r\n  );\r\n\r\n};\r\n\r\nexport default CursosContectoProveedor;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Importo desde \"CursoContecto\" la interface \"Cursos\"\r\n\r\n// useState <Curso[]> = indico que los datos que voy a menjar en este State va a ser\r\n//                      un vector de Cursos. Asi aplicamos el mismo formato inicial\r\n//                      del State que es ([]) >> aca creamos un curso inical de ejemplo\r\n\r\n// nuevoCurso = le indicamos que la constante desde ser del tipo \"Curso\" \r\n//              (traido desde \"CursosContexto\") donde:\r\n//              interface Curso {\r\n//                id: string;\r\n//                titulo: string;\r\n//                objetivos: Objetivo[]; \r\n//              };\r\n\r\n// id: new Date().toString() = cada vez que añadimos un curso nuevo, este toma un id\r\n//                             igual al momento exacto a que se creo, en formato de texto.\r\n\r\n// actualCurso.concat(nuevoCurso) = concateno los cursos previos al nuevo.\r\n"]},"metadata":{},"sourceType":"module"}