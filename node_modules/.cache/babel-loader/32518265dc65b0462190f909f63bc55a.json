{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quadion\\\\Desktop\\\\Milanesas\\\\APPS\\\\SECOND IONIC-REACT APP\\\\myApp\\\\src\\\\Componentes\\\\EdicionModal.tsx\";\n// 1er componente creado.\n// 6to elemento general creado.\n// Sacamos el elemento \"IonModal\" de \"Objetivos.tsx\"\nimport React, { useRef } from \"react\";\nimport { IonModal // Para habilitar un pop up luego de que se cumpla una accion\n, IonHeader, IonToolbar, IonTitle, IonContent, IonButton, IonGrid, IonRow, IonCol, IonLabel, IonItem, IonInput } from '@ionic/react';\n\nconst EdicionModal = props => {\n  var _props$objetivoEditad;\n\n  const textoRef = useRef(null);\n\n  const guardar = () => {\n    const textoIngresado = textoRef.current.value;\n  };\n\n  return /*#__PURE__*/React.createElement(IonModal, {\n    isOpen: props.mostrar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, props.objetivoEditado ? \"EDITAR\" : \"AÑADIR\", \" Objetivo\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    position: \"floating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Ingresa objetivo:\"), /*#__PURE__*/React.createElement(IonInput, {\n    type: \"text\",\n    value: (_props$objetivoEditad = props.objetivoEditado) === null || _props$objetivoEditad === void 0 ? void 0 : _props$objetivoEditad.text,\n    ref: textoRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    fill: \"clear\",\n    onClick: props.cancelar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Cancelar\")), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"secondary\",\n    expand: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Guardar\"))))));\n};\n\nexport default EdicionModal; // usamos props para pasarle las funciones \"editando\" y \"cancelarEdicion\" desde \"Objetivos.tsx\"\n// originalmente era:\n// IonModal isOpen={editando}>\n// <IonButton onClick={cancelarEdicion}>Cancelar</IonButton>\n// objetivoEditado = acepto un objeto con la esctructura aclarada o null \n//                   Si null > ingresamos nuevo objetivo\n//                   Si !null > editamos objetivo ya existente\n// \"EDITAR\" : \"AÑADIR\" = muestro dinamicamente el titulo segun se quiera crear o editar un objetivo\n// textoRef = la uso para tomar los inputs del usuario y poder crear el curso","map":{"version":3,"sources":["C:/Users/Quadion/Desktop/Milanesas/APPS/SECOND IONIC-REACT APP/myApp/src/Componentes/EdicionModal.tsx"],"names":["React","useRef","IonModal","IonHeader","IonToolbar","IonTitle","IonContent","IonButton","IonGrid","IonRow","IonCol","IonLabel","IonItem","IonInput","EdicionModal","props","textoRef","guardar","textoIngresado","current","value","mostrar","objetivoEditado","text","cancelar"],"mappings":";AAAA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,SACEC,QADF,CACY;AADZ,EAEEC,SAFF,EAGEC,UAHF,EAIEC,QAJF,EAKEC,UALF,EAMEC,SANF,EAOEC,OAPF,EAQEC,MARF,EASEC,MATF,EAUEC,QAVF,EAWEC,OAXF,EAYEC,QAZF,QAaO,cAbP;;AAgBA,MAAMC,YAMJ,GAAGC,KAAK,IAAI;AAAA;;AAEZ,QAAMC,QAAQ,GAAGf,MAAM,CAAsB,IAAtB,CAAvB;;AAEA,QAAMgB,OAAO,GAAG,MAAM;AACpB,UAAMC,cAAc,GAAGF,QAAQ,CAACG,OAAT,CAAkBC,KAAzC;AACD,GAFD;;AAIA,sBACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEL,KAAK,CAACM,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWN,KAAK,CAACO,eAAN,GAAwB,QAAxB,GAAmC,QAA9C,cADF,CADF,CAFF,eAQE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,2BAAEP,KAAK,CAACO,eAAR,0DAAE,sBAAuBC,IAFhC;AAGE,IAAA,GAAG,EAAEP,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CAFF,eAeE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,OAAO,EAAED,KAAK,CAACS,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,eAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,WAAjB;AAA6B,IAAA,MAAM,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAJF,CAfF,CADF,CARF,CADF;AAuCD,CArDD;;AAuDA,eAAeV,YAAf,C,CAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA","sourcesContent":["// 1er componente creado.\r\n// 6to elemento general creado.\r\n// Sacamos el elemento \"IonModal\" de \"Objetivos.tsx\"\r\n\r\nimport React, { useRef } from \"react\";\r\n\r\nimport {\r\n  IonModal, // Para habilitar un pop up luego de que se cumpla una accion\r\n  IonHeader,\r\n  IonToolbar,\r\n  IonTitle,\r\n  IonContent,\r\n  IonButton,\r\n  IonGrid,\r\n  IonRow,\r\n  IonCol,\r\n  IonLabel,\r\n  IonItem,\r\n  IonInput,\r\n} from '@ionic/react';\r\n\r\n\r\nconst EdicionModal: React.FC <{\r\n\r\n  mostrar: boolean; \r\n  cancelar: () => void;\r\n  objetivoEditado: {id: string; text: string} | null;\r\n\r\n}> = props => {\r\n\r\n  const textoRef = useRef<HTMLIonInputElement>(null);\r\n\r\n  const guardar = () => {\r\n    const textoIngresado = textoRef.current!.value;\r\n  };\r\n\r\n  return (\r\n    <IonModal isOpen={props.mostrar}>\r\n\r\n      <IonHeader>\r\n        <IonToolbar color=\"primary\">\r\n          <IonTitle>{props.objetivoEditado ? \"EDITAR\" : \"AÑADIR\"} Objetivo</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent>\r\n        <IonGrid>\r\n\r\n          <IonRow>\r\n            <IonCol>\r\n              <IonItem>\r\n                <IonLabel position=\"floating\">Ingresa objetivo:</IonLabel>\r\n                <IonInput \r\n                  type=\"text\" \r\n                  value={props.objetivoEditado?.text} \r\n                  ref={textoRef}\r\n                />\r\n              </IonItem>\r\n            </IonCol>\r\n          </IonRow>\r\n\r\n          <IonRow className=\"ion-text-center\">\r\n            <IonCol>\r\n              <IonButton fill=\"clear\" onClick={props.cancelar}>Cancelar</IonButton>\r\n            </IonCol>\r\n            <IonCol>\r\n              <IonButton color=\"secondary\" expand=\"block\">Guardar</IonButton>\r\n            </IonCol>\r\n          </IonRow>\r\n\r\n        </IonGrid>\r\n      </IonContent>\r\n\r\n    </IonModal>\r\n  )\r\n};\r\n\r\nexport default EdicionModal\r\n\r\n\r\n// usamos props para pasarle las funciones \"editando\" y \"cancelarEdicion\" desde \"Objetivos.tsx\"\r\n// originalmente era:\r\n// IonModal isOpen={editando}>\r\n// <IonButton onClick={cancelarEdicion}>Cancelar</IonButton>\r\n\r\n// objetivoEditado = acepto un objeto con la esctructura aclarada o null \r\n//                   Si null > ingresamos nuevo objetivo\r\n//                   Si !null > editamos objetivo ya existente\r\n\r\n// \"EDITAR\" : \"AÑADIR\" = muestro dinamicamente el titulo segun se quiera crear o editar un objetivo\r\n\r\n// textoRef = la uso para tomar los inputs del usuario y poder crear el curso"]},"metadata":{},"sourceType":"module"}