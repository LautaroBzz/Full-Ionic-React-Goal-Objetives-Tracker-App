{"ast":null,"code":"import React from \"react\";\nconst CursosContexto = React.createContext({\n  cursos: [],\n  añadirCurso: () => {},\n  añadirObjetivo: () => {},\n  borrarObjetivo: () => {},\n  actualizarObjetivo: () => {},\n  cambiarFiltroCurso: () => {}\n});\n;\n;\n;\nexport default CursosContexto; // createContext = maneja los datos que le brindemos desde distintos lugares de la app\n//                 En este caso el contecto es un objeto {} con un vector de \"cursos\"\n// cursos: {}[] = indica que el contexto maneja un objeto donde el campo de \"cursos\"\n//                va a ser un vector de objetos.\n//                Aqui estoy moviendo el {} a la interface de \"Curso\"\n// Objetivo: {}[] = Idem para cursos\n// interface = para la descripcion de tipos de variables.","map":{"version":3,"sources":["C:/Users/Quadion/Desktop/Milanesas/IONIC/SECOND IONIC-REACT APP/myApp/src/Datos/CursosContexto.tsx"],"names":["React","CursosContexto","createContext","cursos","añadirCurso","añadirObjetivo","borrarObjetivo","actualizarObjetivo","cambiarFiltroCurso"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAGD,KAAK,CAACE,aAAN,CAAgC;AACrDC,EAAAA,MAAM,EAAE,EAD6C;AAErDC,EAAAA,WAAW,EAAE,MAAM,CAAE,CAFgC;AAGrDC,EAAAA,cAAc,EAAE,MAAM,CAAE,CAH6B;AAIrDC,EAAAA,cAAc,EAAE,MAAM,CAAE,CAJ6B;AAKrDC,EAAAA,kBAAkB,EAAE,MAAM,CAAE,CALyB;AAMrDC,EAAAA,kBAAkB,EAAE,MAAM,CAAE;AANyB,CAAhC,CAAvB;AAgBC;AAOA;AAKA;AAED,eAAeP,cAAf,C,CAIA;AACA;AAEA;AACA;AACA;AAEA;AAEA","sourcesContent":["\r\nimport React from \"react\";\r\n\r\nconst CursosContexto = React.createContext <Contexto> ({ \r\n  cursos: [],\r\n  añadirCurso: () => {},\r\n  añadirObjetivo: () => {},\r\n  borrarObjetivo: () => {},\r\n  actualizarObjetivo: () => {},\r\n  cambiarFiltroCurso: () => {}\r\n});\r\n\r\ninterface Contexto {\r\n  cursos: Curso[];     \r\n  añadirCurso: (tituloCurso: string) => void;\r\n  añadirObjetivo: (cursoId: string, textoObjetivo: string) => void;\r\n  borrarObjetivo: (cursoId: string, objetivoId: string) => void;\r\n  actualizarObjetivo: (cursoId: string, objetivoId: string, nuevoTexto: string) => void;\r\n  cambiarFiltroCurso: (cursoId: string, estaIncluido: boolean) => void;\r\n};\r\n\r\n export interface Curso {\r\n  id: string;\r\n  titulo: string;\r\n  objetivos: Objetivo[];\r\n  incluido: boolean;\r\n};\r\n\r\nexport interface Objetivo {\r\n  id: string;\r\n  texto: string;\r\n};\r\n\r\nexport default CursosContexto;\r\n\r\n\r\n\r\n// createContext = maneja los datos que le brindemos desde distintos lugares de la app\r\n//                 En este caso el contecto es un objeto {} con un vector de \"cursos\"\r\n\r\n// cursos: {}[] = indica que el contexto maneja un objeto donde el campo de \"cursos\"\r\n//                va a ser un vector de objetos.\r\n//                Aqui estoy moviendo el {} a la interface de \"Curso\"\r\n\r\n// Objetivo: {}[] = Idem para cursos\r\n\r\n// interface = para la descripcion de tipos de variables."]},"metadata":{},"sourceType":"module"}